{"version":3,"sources":["components/ContactForm/initialState.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["initialState","name","number","fields","type","pattern","title","required","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","resetForm","this","onChange","Component","ContactList","contacts","deleteContact","contactListItem","map","idx","id","onClick","Filter","placeholder","App","filter","addNewContact","newContact","uuidv4","find","toLowerCase","alert","newList","splice","onChangeFilter","filterValue","target","filterContacts","normalizedFilter","includes","contactList","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba569e4d.chunk.js","sourcesContent":["export const initialState = {\n  name: '',\n  number: '',\n};\n","import React, { Component } from \"react\"\n// import PropTypes from 'prop-types';\nimport { initialState } from \"./initialState\"\n\nconst fields = {\n\tname: {\n\t\ttype: \"text\",\n\t\tpattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n\t\ttitle:\n\t\t\t\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n\t\trequired: true,\n\t},\n\tnumber: {\n\t\ttype: \"tel\",\n\t\t// pattern: '/^(+)?((d{2,3}) ?d|d)(([ -]?d)|( ?(d{2,3}) ?)){5,12}d$/',\n\t\tpattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\n\t\ttitle: \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n\t\trequired: true,\n\t},\n}\n\nclass ContactForm extends Component {\n\tstate = { ...initialState }\n\n\t//Отвечает за обновление состояния\n\thandleChange = (event) => {\n\t\tconst { name, value } = event.currentTarget\n\t\tthis.setState({ [name]: value })\n\t}\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tthis.props.onSubmit(this.state)\n\t\tthis.resetForm()\n\t}\n\n\tresetForm() {\n\t\tthis.setState({\n\t\t\tname: \"\",\n\t\t\tnumber: \"\",\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { name, number } = this.state\n\t\tconst { handleSubmit, handleChange } = this\n\t\t// console.log({ ...initialState });\n\t\t// const form = document.querySelector('form');\n\t\t// console.log(form);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<p>Name</p>\n\t\t\t\t\t\t<input value={name} onChange={handleChange} name=\"name\" {...fields.name} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<p>Number</p>\n\t\t\t\t\t\t<input value={number} onChange={handleChange} name=\"number\" {...fields.number} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<br />\n\t\t\t\t\t<button type=\"submit\">Add contact</button>\n\t\t\t\t</form>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default ContactForm\n","import React from 'react';\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// import PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  const contactListItem = contacts.map(({ id, name, number }, idx) => {\n    // console.log(id);\n    return (\n      <li key={id}>\n        {name} : {number}\n        <button onClick={() => deleteContact(idx)}>Del</button>\n      </li>\n    );\n  });\n\n  return <ul>{contactListItem}</ul>;\n};\n\nexport default ContactList;\n","import React from \"react\"\n\nconst Filter = ({ onChange }) => {\n\treturn (\n\t\t<>\n\t\t\t<input onChange={onChange} type=\"text\" placeholder=\"search contact\" />\n\t\t</>\n\t)\n}\n\nexport default Filter\n","import React, { Component } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nimport ContactForm from \"./components/ContactForm\"\nimport ContactList from \"./components/ContactList\"\nimport Filter from \"./components/Filter\"\n\nclass App extends Component {\n\tstate = {\n\t\tcontacts: [\n\t\t\t// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n\t\t\t// { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n\t\t\t// { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n\t\t\t// { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n\t\t],\n\t\tfilter: \"\",\n\t}\n\n\taddNewContact = ({ id, name, number }) => {\n\t\tconst { contacts } = this.state\n\t\tconst newContact = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\tnumber,\n\t\t}\n\t\tif (contacts.find(({ name }) => name.toLowerCase() === newContact.name.toLowerCase())) {\n\t\t\treturn alert(`${newContact.name} - contact already exists`)\n\t\t}\n\t\tthis.setState(({ contacts }) => ({\n\t\t\tcontacts: [...contacts, newContact],\n\t\t}))\n\t}\n\tdeleteContact = (idx) => {\n\t\tthis.setState(({ contacts }) => {\n\t\t\tconst newList = [...contacts]\n\t\t\tnewList.splice(idx, 1)\n\t\t\t// const result = newList.filter((_, index)=> index !== idx);\n\t\t\treturn {\n\t\t\t\tcontacts: newList,\n\t\t\t}\n\t\t})\n\t}\n\n\tonChangeFilter = ({ target }) => {\n\t\tconst filterValue = target.value\n\t\tthis.setState({ filter: filterValue })\n\t}\n\n\tfilterContacts = () => {\n\t\tconst { contacts, filter } = this.state\n\t\tconst normalizedFilter = filter.toLowerCase()\n\t\tif (!filter) {\n\t\t\treturn contacts\n\t\t}\n\t\treturn contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n\t}\n\tcomponentDidMount() {\n\t\t// console.log(\"app componentDidMount\")\n\t\tconst contactList = JSON.parse(localStorage.getItem(\"contacts\"))\n\t\tthis.setState({ contacts: contactList || [] })\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst { contacts } = this.state\n\t\t// console.log(\"app componentDidUpdate\")\n\t\tif (contacts !== prevState.contacts) {\n\t\t\tlocalStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { addNewContact, deleteContact, onChangeFilter, filterContacts } = this\n\t\tconst contacts = filterContacts()\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Phonebook</h1>\n\t\t\t\t<ContactForm onSubmit={addNewContact} />\n\t\t\t\t<h2>Contacts</h2>\n\t\t\t\t<Filter onChange={onChangeFilter} />\n\t\t\t\t<ContactList contacts={contacts} deleteContact={deleteContact} />\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}